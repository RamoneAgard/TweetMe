{"version":3,"sources":["logo.svg","lookup/components.js","tweets/lookup.js","tweets/buttons.js","profiles/components.js","profiles/utils.js","profiles/badge.js","profiles/lookup.js","tweets/detail.js","tweets/list.js","tweets/create.js","tweets/feed.js","tweets/components.js","App.js","index.js"],"names":["backendLookup","method","endpoint","callback","data","jsonData","JSON","stringify","xhttp","XMLHttpRequest","url","open","responseType","csrftoken","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","getCookie","setRequestHeader","onload","status","response","detail","window","location","href","indexOf","onerror","e","console","log","send","apiTweetList","username","nextUrl","replace","apiTweetFeed","undefined","ActionBtn","props","tweet","action","didPerformAction","likes","className","actionDisplay","display","handleBackendActionUpdate","type","onClick","event","preventDefault","tweetId","id","apiTweetAction","UserLink","children","UserDisplay","user","includeFullName","hideLink","nameDisplay","first_name","last_name","Fragment","UserPicture","userIdSpan","DisplayCount","numeral","format","ProfileBadge","didFollowToggle","profileLoading","currentVerb","is_following","follower_count","following_count","bio","ProfileBadgeComponent","useState","didLookup","setDidLookup","profile","setProfile","setProfileLoading","handleBackendLookup","alert","useEffect","apiProfileDetail","actionVerb","toLowerCase","apiProfileFollowToggle","ParentTweet","parent","Tweet","retweeter","isRetweet","hideActions","didRetweet","actionTweet","setActionTweet","path","pathname","idRegex","match","urlTweetId","groups","tweetid","isDetail","handlePerformAction","newActionTweet","content","TweetsList","tweetsInit","setTweetsInit","tweets","setTweets","setNextUrl","tweetsDidSet","setTweetsDidSet","final","newTweets","concat","handleTweetListLookup","results","next","handleDidRetweet","newTweet","updateTweetsInit","unshift","updateFinalTweets","map","item","index","moreTweets","TweetCreate","textAreaRef","React","createRef","didTweet","handleBackendCreateUpdate","onSubmit","newT","current","value","ref","required","TweetsFeedList","TweetsComponent","setNewTweets","canTweet","tempNewTweets","TweetDetailComponent","setTweet","apiTweetDetail","App","src","logo","alt","target","rel","appEl","getElementById","ReactDOM","render","StrictMode","createElement","tweetsEl","MyComponent","dataset","tweetsFeedEl","querySelectorAll","forEach","element"],"mappings":"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","file":"static/js/main.224febd0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","//import React from 'react';\n\nfunction getCookie(name) {\n  var cookieValue = null;\n  if (document.cookie && document.cookie !== '') {\n      var cookies = document.cookie.split(';');\n      for (var i = 0; i < cookies.length; i++) {\n          var cookie = cookies[i].trim();\n          // Does this cookie string begin with the name we want?\n          if (cookie.substring(0, name.length + 1) === (name + '=')) {\n              cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n              break;\n          }\n      }\n  }\n  return cookieValue;\n}\n\nexport function backendLookup(method, endpoint, callback, data) {\n  let jsonData;\n  if (data) {\n    jsonData = JSON.stringify(data)\n  }\n  const xhttp = new XMLHttpRequest();\n  const url = `http://localhost:8000/api${endpoint}`;\n  const responseType = 'json';\n  xhttp.open(method, url);\n  xhttp.responseType = responseType;\n  // for csrf token\n  const csrftoken = getCookie('csrftoken')\n  xhttp.setRequestHeader(\"Content-Type\", \"application/json\");\n  if (csrftoken) {\n    //xhttp.setRequestHeader('HTTP_X_REQUESTED_WITH', 'XMLHttpRequest');\n    xhttp.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n    xhttp.setRequestHeader('X-CSRFToken', csrftoken);\n  }\n\n  xhttp.onload = function () {\n    //console.log(xhttp.response, xhttp.status)\n    if(xhttp.status === 403){\n      const detail = xhttp.response.detail\n      if (detail === \"Authentication credentials were not provided.\"){\n        if(window.location.href.indexOf(\"login\") === -1) {\n          window.location.href = \"/login?showLoginRequired=true\"\n        }\n      }\n    }\n    callback(xhttp.response, xhttp.status)\n  }\n  xhttp.onerror = function (e) {\n    console.log(e)\n    callback({ 'message': \"The request was an error\" }, 400)\n  }\n\n  xhttp.send(jsonData)\n}\n\n","import {backendLookup} from '../lookup'\n\nexport function apiTweetCreate(newTweet, callback) {\n    backendLookup(\"POST\", \"/tweets/create/\", callback, { content: newTweet })\n}\n\nexport function apiTweetAction(tweetId, action, callback) {\n    const data = {id: tweetId, action: action}\n    backendLookup(\"POST\", \"/tweets/action/\", callback, data)\n}\n\nexport function apiTweetList(username, callback, nextUrl) {\n    let endpoint = \"/tweets/\"\n    if (username) {\n        endpoint = `/tweets/?username=${username}`\n    }\n    if(nextUrl !== null){\n        endpoint = nextUrl.replace(\"http://localhost:8000/api\", \"\")\n    }\n    backendLookup(\"GET\", endpoint, callback)\n}\n\nexport function apiTweetFeed(callback, nextUrl) {\n    let endpoint = \"/tweets/feed/\"\n    if(nextUrl !== null && nextUrl !== undefined){\n        endpoint = nextUrl.replace(\"http://localhost:8000/api\", \"\")\n    }\n    backendLookup(\"GET\", endpoint, callback)\n}\n\nexport function apiTweetDetail(tweetId, callback) {\n    let endpoint = `/tweets/${tweetId}/`\n    backendLookup(\"GET\", endpoint, callback)\n}","import React from 'react';\nimport { apiTweetAction } from './lookup'\n\nexport function ActionBtn(props) {\n    const { tweet, action, didPerformAction } = props\n    const likes = tweet.likes ? tweet.likes : 0\n    //const [likes, setLikes] = useState(tweet.likes ? tweet.likes : 0)\n    //const [userLike, setUserLike] = useState(tweet.userLike === true ? true : false)\n    const className = props.className ? props.className : 'btn btn-primary btn-sm'\n    const actionDisplay = action.display ? action.display : 'Action'\n\n    const handleBackendActionUpdate = (response, status) => {\n        console.log(response, status)\n        if ((status === 200 || status === 201) && didPerformAction) {\n            //setLikes(response.likes)\n            didPerformAction(response, status)\n            //setUserLike(true)\n        }\n        // if (action.type === 'like') {\n        //     if (userLike === true) {\n        //         //unlike if already liked \n        //         setLikes(likes - 1)\n        //         setUserLike(false)\n        //     }\n        //     else {\n        //         setLikes(likes + 1)\n        //         setUserLike(true)\n        //     }\n        // }\n    }\n\n    //handle like button\n    const handleClick = (event) => {\n        event.preventDefault()\n        apiTweetAction(tweet.id, action.type, handleBackendActionUpdate)\n    }\n\n    const display = action.type === 'like' ? `${likes} ${actionDisplay}` : actionDisplay\n    return <button className={className} onClick={handleClick}>\n        {display}\n    </button>\n}","import React from 'react'\n\n//wraps and links an element with the user profile link\nexport function UserLink(props){\n    const {username} = props\n\n    const handleUserLink = (event) => {\n        window.location.href = `/profile/${username}`\n    }\n    \n    return <span className='pointer' onClick={handleUserLink}>\n        {props.children}\n    </span>\n}\n\n//returns a linked react fragment to display the user name in a tweet\nexport function UserDisplay(props){\n    const {user, includeFullName, hideLink } = props\n    const nameDisplay = includeFullName === true ? `${user.first_name} ${user.last_name} ` : null\n    \n    return <React.Fragment>\n    {nameDisplay}\n    {hideLink === true ? \n        `@${user.username}` :\n        <UserLink username={user.username}>\n            @{user.username}\n        </UserLink>\n    }   \n    </React.Fragment>\n}\n\n//returns a linked span element to display user picture\nexport function UserPicture(props) {\n    const {user, hideLink} = props\n    const userIdSpan =  <span className='mx-1 px-3 py-2 rounded-circle bg-dark text-white'>\n                            {user.username[0]}\n                        </span>\n\n    return hideLink === true ? userIdSpan : \n    <UserLink username={user.username}>\n        {userIdSpan}\n    </UserLink>\n}","import React from \"react\"\nimport numeral from 'numeral'\n\n//function to display user read numbers with numeral JS\nexport function DisplayCount(props) {\n    return <span className={props.className}>{numeral(props.children).format('0a')}</span>\n}","import React, { useEffect, useState } from \"react\"\nimport { DisplayCount } from \"./utils\"\nimport { apiProfileDetail, apiProfileFollowToggle } from './lookup'\nimport { UserDisplay, UserPicture } from './components'\n\n\nfunction ProfileBadge(props){\n    const {user, didFollowToggle, profileLoading} = props\n    //console.log(user)\n    let currentVerb = (user && user.is_following) ? \"Unfollow\" : \"Follow\"\n    currentVerb = profileLoading ? \"Loading...\" : currentVerb\n\n    //Use passed callback for follow/unfollow request \n    const handleFollowToggle = (event) =>{\n        event.preventDefault()\n        if(didFollowToggle && !profileLoading){\n            didFollowToggle(currentVerb)\n        }\n    }\n\n    return user ? <div className='m-2'>\n        <UserPicture user={user} hideLink />\n        <p><UserDisplay user={user} includeFullName hideLink /></p>\n        <p><DisplayCount>{user.follower_count}</DisplayCount> {user.follower_count === 1 ? \"Follower\" : \"Followers\"}</p>\n        <p>Following <DisplayCount>{user.following_count}</DisplayCount></p>\n        <p>Location: {user.location}</p>\n        <p>{user.bio}</p>\n        <button className='btn btn-primary' onClick={handleFollowToggle}>\n            {currentVerb}\n        </button>\n    </div> : null\n}\n\n\nexport function ProfileBadgeComponent(props){\n    const {username} = props \n\n    //lookup\n    const [didLookup, setDidLookup] = useState(false)\n    const [profile, setProfile] = useState(null)\n    const [profileLoading, setProfileLoading] = useState(false)\n\n    //callback for tweet detail lookup\n    const handleBackendLookup = (response, status) => {\n        if (status === 200) {\n            setProfile(response)\n        } else {\n            console.log(response)\n            alert(\"There was and error finding that user profile\")\n        }\n    }\n\n    //perform backend lookup on creation\n    useEffect(() => {\n        if(didLookup === false){\n            apiProfileDetail(username, handleBackendLookup)\n            setDidLookup(true)\n        }\n    }, [didLookup, setDidLookup, username])\n\n    //handles the follow button request and response\n    const handleFollowAction = (actionVerb) =>{\n        setProfileLoading(true)\n        const followToggleCallback = (response, status) =>{\n            //console.log(response)\n            if(status === 200){\n                setProfile(response)\n            }\n            setProfileLoading(false)\n        }\n        apiProfileFollowToggle(username, actionVerb, followToggleCallback)\n    }\n\n    return didLookup === false ? \"Loading\" : profile ? \n    <ProfileBadge user={profile} didFollowToggle={handleFollowAction} profileLoading={profileLoading}/>: null\n}","import {backendLookup} from '../lookup'\n\nexport function apiProfileDetail(username, callback) {\n    backendLookup(\"GET\", `/profile/${username}/`, callback)\n}\n\nexport function apiProfileFollowToggle(username, action, callback) {\n    const data = {'action' : `${action && action}`.toLowerCase()}\n    backendLookup(\"POST\", `/profile/${username}/follow`, callback, data)\n}","import React, { useState } from 'react';\nimport { ActionBtn } from './buttons'\nimport {UserDisplay, UserPicture} from '../profiles'\n\nexport function ParentTweet(props) {\n    const { tweet } = props\n    return tweet.parent ?\n        <Tweet\n            tweet={tweet.parent}\n            retweeter={props.retweeter}\n            isRetweet\n            hideActions\n            className={'col-12 px-0'} /> : null\n}\n\nexport function Tweet(props) {\n    const { tweet, didRetweet, hideActions, isRetweet, retweeter } = props\n    const [actionTweet, setActionTweet] = useState(props.tweet ? props.tweet : null)\n    let className = props.className ? props.className : 'col-12 col-md-9 mb-4 py-3 border rounded mx-auto'\n    className = isRetweet === true ? `${className} border rounded p-2` : className\n    const path = window.location.pathname\n    var idRegex = /(?<tweetid>\\d+)/\n    var match = path.match(idRegex)\n    const urlTweetId = match ? match.groups.tweetid : -1\n    const isDetail = `${tweet.id}` === `${urlTweetId}`\n\n    //handle update after action button is used\n    const handlePerformAction = (newActionTweet, status) => {\n        if (status === 200) {\n            setActionTweet(newActionTweet)\n        } else if (status === 201 && didRetweet) {\n            // get new tweet and let tweetList know of change\n            didRetweet(newActionTweet)\n        }\n    }\n\n    const handleLink = (event) => {\n        event.preventDefault()\n        window.location.href = `/${tweet.id}`\n    }\n\n    return <div className={className}>\n        {isRetweet === true && <div className='mb-2'>\n            <span className='text-muted small p-0'>Retweet via <UserDisplay user={retweeter}/></span>\n        </div>}\n        <div className='d-flex'>\n            <div className=''>\n                <UserPicture user={tweet.user}/>\n            </div>\n            <div className='col-11'>\n                <div>\n                    <p>\n                        <UserDisplay user={tweet.user} includeFullName/>\n                    </p>\n                    <p>\n                        {tweet.content}\n                    </p>\n                    <ParentTweet tweet={tweet} retweeter={tweet.user} />\n                </div>\n                <div className='btn btn-group px-0'>\n                    {(actionTweet && hideActions !== true) && <React.Fragment>\n                        <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{ type: 'like', display: \"Likes\" }} />\n                        <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{ type: 'unlike', display: \"Unlike\" }} />\n                        <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{ type: 'retweet', display: \"Retweet\" }} />\n                    </React.Fragment>}\n                    {isDetail === true ? null :\n                        <button onClick={handleLink} className='btn btn-outline-primary btn-sm'>View</button>\n                    }\n                </div>\n            </div>\n        </div>\n    </div>\n}","import React, { useEffect, useState } from 'react';\nimport { apiTweetList } from './lookup'\nimport { Tweet } from './detail'\n\n\nexport function TweetsList(props) {\n    const [tweetsInit, setTweetsInit] = useState([])\n    const [tweets, setTweets] = useState([])\n    const [nextUrl, setNextUrl] = useState(null)\n    const [tweetsDidSet, setTweetsDidSet] = useState(false)\n\n    //combine new and inital tweets\n    useEffect(() => {\n        const final = [...props.newTweets].concat(tweetsInit)\n        if (final.length !== tweets.length) {\n            setTweets(final)\n        }\n    }, [props.newTweets, tweetsInit, tweets])\n\n    //call for api tweet list response \n    const handleTweetListLookup = (response, status) => {\n        //console.log(response, status)\n        if (status === 200) {\n            setTweetsInit(response.results)\n            setNextUrl(response.next)\n            setTweetsDidSet(true)\n        }\n        else {\n            alert(\"There was an error\")\n        }\n    }\n\n    //pull inital tweets\n    useEffect(() => {\n        if (tweetsDidSet === false) {\n            //server side call\n            apiTweetList(props.username, handleTweetListLookup, null)\n        }\n    }, [setTweetsInit, tweetsDidSet, setTweetsDidSet, props.username])\n\n    //combine new retweets\n    const handleDidRetweet = (newTweet) => {\n        const updateTweetsInit = [...tweetsInit]\n        updateTweetsInit.unshift(newTweet)\n        setTweetsInit(updateTweetsInit)\n        const updateFinalTweets = [...tweets]\n        updateFinalTweets.unshift(tweets)\n        setTweets(updateFinalTweets)\n    }\n\n    const handleLoadNext = (event) =>{\n        event.preventDefault()\n        if(nextUrl !== null){\n            const handleLoadNextResponse = (response, status) => {\n                if (status === 200) {\n                    const moreTweets = [...tweets].concat(response.results)\n                    setTweetsInit(moreTweets)\n                    setTweets(moreTweets)\n                    setNextUrl(response.next)\n                }\n                else {\n                    alert(\"There was an error\")\n                }\n            }\n            apiTweetList(props.username, handleLoadNextResponse, nextUrl)\n\n        }\n    }\n\n\n    return <React.Fragment>\n        {tweets.map((item, index) => {\n            return <Tweet \n                tweet={item} \n                didRetweet={handleDidRetweet}\n                className='my-5 p-3 border rounded bg-white text-dark' \n                key={`${index}-${item.id}`} />\n        })}\n        {nextUrl !== null && \n            <button \n                className='btn btn-outline-primary'\n                onClick = {handleLoadNext}>\n                Load Next\n            </button>\n        }\n    </React.Fragment>\n}","import React from 'react';\nimport { apiTweetCreate } from './lookup'\n\n\nexport function TweetCreate(props) {\n    //set state variables\n    const textAreaRef = React.createRef()\n    const {didTweet} = props\n\n    //callback for api response update\n    const handleBackendCreateUpdate = (response, status) => {\n        if (status === 201) {\n            didTweet(response)\n        }\n        else {\n            console.log(response)\n            alert(\"There was an error that occured\")\n        }\n    }\n\n    //new tweet handler\n    const handleSubmit = (event) => {\n        event.preventDefault()\n        const newT = textAreaRef.current.value\n\n        //server side call\n        apiTweetCreate(newT, handleBackendCreateUpdate)\n        console.log(newT)\n        textAreaRef.current.value = ''\n    }\n\n    return <div className={props.className}>\n        <form onSubmit={handleSubmit}>\n            <textarea ref={textAreaRef} className='form-control' name='tweet' required={true}>\n            </textarea>\n            <button type='submit' className='btn btn-primary my-3'>Tweet</button>\n        </form>\n    </div>\n}","import React, { useEffect, useState } from 'react';\nimport { apiTweetFeed } from './lookup'\nimport { Tweet } from './detail'\n\nexport function TweetsFeedList(props) {\n    const [tweetsInit, setTweetsInit] = useState([])\n    const [tweets, setTweets] = useState([])\n    const [nextUrl, setNextUrl] = useState(null)\n    const [tweetsDidSet, setTweetsDidSet] = useState(false)\n\n    //combine new and inital tweets\n    useEffect(() => {\n        const final = [...props.newTweets].concat(tweetsInit)\n        if (final.length !== tweets.length) {\n            setTweets(final)\n        }\n    }, [props.newTweets, tweetsInit, tweets])\n\n    //call for api tweet list response \n    const handleTweetListLookup = (response, status) => {\n        //console.log(response, status)\n        if (status === 200) {\n            setTweetsInit(response.results)\n            setNextUrl(response.next)\n            setTweetsDidSet(true)\n        }\n        else {\n            alert(\"There was an error\")\n        }\n    }\n\n    //pull inital tweets\n    useEffect(() => {\n        if (tweetsDidSet === false) {\n            //server side call\n            apiTweetFeed(handleTweetListLookup)\n        }\n    }, [setTweetsInit, tweetsDidSet, setTweetsDidSet, props.username])\n\n    //combine new retweets\n    const handleDidRetweet = (newTweet) => {\n        const updateTweetsInit = [...tweetsInit]\n        updateTweetsInit.unshift(newTweet)\n        setTweetsInit(updateTweetsInit)\n        const updateFinalTweets = [...tweets]\n        updateFinalTweets.unshift(tweets)\n        setTweets(updateFinalTweets)\n    }\n\n    const handleLoadNext = (event) =>{\n        event.preventDefault()\n        if(nextUrl !== null){\n            const handleLoadNextResponse = (response, status) => {\n                if (status === 200) {\n                    const moreTweets = [...tweets].concat(response.results)\n                    setTweetsInit(moreTweets)\n                    setTweets(moreTweets)\n                    setNextUrl(response.next)\n                }\n                else {\n                    alert(\"There was an error\")\n                }\n            }\n            apiTweetFeed(handleLoadNextResponse, nextUrl)\n\n        }\n    }\n\n\n    return <React.Fragment>\n        {tweets.map((item, index) => {\n            return <Tweet \n                tweet={item} \n                didRetweet={handleDidRetweet}\n                className='my-5 p-3 border rounded bg-white text-dark' \n                key={`${index}-${item.id}`} />\n        })}\n        {nextUrl !== null && \n            <button \n                className='btn btn-outline-primary'\n                onClick = {handleLoadNext}>\n                Load Next\n            </button>\n        }\n    </React.Fragment>\n}","import React, { useEffect, useState } from 'react'\nimport { TweetsList } from './list'\nimport { TweetCreate } from './create'\nimport { Tweet } from './detail'\nimport { TweetsFeedList } from './feed'\nimport { apiTweetDetail } from './lookup'\n\n\nexport function TweetsComponent(props) {\n    //set state variables\n    //console.log(props)\n    const [newTweets, setNewTweets] = useState([])\n    const canTweet = props.canTweet === \"false\" ? false : true\n\n    //callback for api response update\n    const handleNewTweet = (newTweet) => {\n        let tempNewTweets = [...newTweets]\n        tempNewTweets.unshift(newTweet)\n        setNewTweets(tempNewTweets)\n    }\n\n    return <div className={props.className}>\n        {canTweet === true && <TweetCreate didTweet={handleNewTweet} className='col-12 mb-3'/>}\n        <TweetsList newTweets={newTweets} {...props} />\n    </div>\n\n}\n\nexport function TweetsFeedComponent(props) {\n    //set state variables\n    //console.log(props)\n    const [newTweets, setNewTweets] = useState([])\n    const canTweet = props.canTweet === \"false\" ? false : true\n\n    //callback for api response update\n    const handleNewTweet = (newTweet) => {\n        let tempNewTweets = [...newTweets]\n        tempNewTweets.unshift(newTweet)\n        setNewTweets(tempNewTweets)\n    }\n\n    return <div className={props.className}>\n        {canTweet === true && <TweetCreate didTweet={handleNewTweet} className='col-12 mb-3'/>}\n        <TweetsFeedList newTweets={newTweets} {...props} />\n    </div>\n\n}\n\n\nexport function TweetDetailComponent(props) {\n    const {tweetId} = props \n    const [didLookup, setDidLookup] = useState(false)\n    const [tweet, setTweet] = useState(null)\n\n    //callback for tweet detail lookup\n    const handleBackendLookup = (response, status) => {\n        if (status === 200) {\n            setTweet(response)\n        } else {\n            console.log(response)\n            alert(\"There was and error finding that tweet\")\n        }\n    }\n\n    //perform backend lookup on creation\n    useEffect(() => {\n        if(didLookup === false){\n            apiTweetDetail(tweetId, handleBackendLookup)\n            setDidLookup(true)\n        }\n    }, [didLookup, setDidLookup, tweetId])\n\n    return tweet === null ? null :\n        <Tweet\n            tweet={tweet}\n            className={props.className}\n        />\n}\n\n\n\n\n","import logo from './logo.svg';\nimport './App.css';\nimport React from 'react';\nimport {TweetsComponent} from './tweets'\n\n//pulls tweets from backend api endpoint and display on page \n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <TweetsComponent />\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { TweetsComponent, TweetsFeedComponent, TweetDetailComponent } from './tweets'\nimport { ProfileBadgeComponent } from './profiles';\n//import reportWebVitals from './reportWebVitals';\n\nconst appEl = document.getElementById('root')\nif(appEl){\n  ReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  appEl\n  );\n}\n\n//insert TweetsComponents into DOM element\nconst e = React.createElement\nconst tweetsEl = document.getElementById('tweetme-2')\nif(tweetsEl){\n  //get data set from django template element\n  const MyComponent = e(TweetsComponent, tweetsEl.dataset)\n  ReactDOM.render(MyComponent, tweetsEl)\n  // ReactDOM.render(\n  // <React.StrictMode>\n  //   <TweetsComponent />\n  // </React.StrictMode>,\n  // tweetsEl\n  // );\n}\n\n//insert TweetsFeedComponents into DOM element\nconst tweetsFeedEl = document.getElementById('tweetme-2-feed')\nif(tweetsFeedEl){\n  //get data set from django template element\n  ReactDOM.render(\n    e(TweetsFeedComponent, tweetsFeedEl.dataset), \n    tweetsFeedEl)\n}\n\n//insert TweetDetailComponent into DOM element\nconst tweetDetailElements = document.querySelectorAll(\".tweetme-2-detail\")\ntweetDetailElements.forEach(element => {\n  ReactDOM.render(\n    e(TweetDetailComponent, element.dataset), \n    element)\n})\n\nconst userProfileBadgeElements = document.querySelectorAll(\".tweetme-2-profile-badge\")\nuserProfileBadgeElements.forEach(element => {\n  ReactDOM.render(\n    e(ProfileBadgeComponent, element.dataset), \n    element)\n})\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}