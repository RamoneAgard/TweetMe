{"version":3,"sources":["logo.svg","lookup/components.js","tweets/buttons.js","tweets/lookup.js","tweets/detail.js","tweets/list.js","tweets/create.js","tweets/components.js","App.js","reportWebVitals.js","index.js"],"names":["backendLookup","method","endpoint","callback","data","jsonData","JSON","stringify","xhttp","XMLHttpRequest","url","open","responseType","csrftoken","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","getCookie","setRequestHeader","onload","response","status","onerror","e","console","log","send","ActionBtn","props","tweet","action","didPerformAction","likes","className","actionDisplay","display","handleBackendActionUpdate","type","onClick","event","preventDefault","tweetId","id","apiTweetAction","ParentTweet","parent","Tweet","hideActions","didRetweet","useState","actionTweet","setActionTweet","path","window","location","pathname","idRegex","match","urlTweetId","groups","tweetid","isDetail","handlePerformAction","newActionTweet","content","Fragment","href","TweetsList","tweetsInit","setTweetsInit","tweets","setTweets","tweetsDidSet","setTweetsDidSet","useEffect","final","newTweets","concat","handleTweetListLookup","alert","username","apiTweetList","handleDidRetweet","newTweet","updateTweetsInit","unshift","updateFinalTweets","map","item","index","TweetCreate","textAreaRef","React","createRef","didTweet","handleBackendCreateUpdate","onSubmit","newT","current","value","ref","required","TweetsComponent","setNewTweets","canTweet","tempNewTweets","TweetDetailComponent","didLookup","setDidLookup","setTweet","handleBackendLookup","apiTweetDetail","App","src","logo","alt","target","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","appEl","getElementById","ReactDOM","render","StrictMode","createElement","tweetsEl","MyComponent","dataset","querySelectorAll","forEach","element"],"mappings":"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","file":"static/js/main.126e2abf.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","//import React from 'react';\n\nfunction getCookie(name) {\n  var cookieValue = null;\n  if (document.cookie && document.cookie !== '') {\n      var cookies = document.cookie.split(';');\n      for (var i = 0; i < cookies.length; i++) {\n          var cookie = cookies[i].trim();\n          // Does this cookie string begin with the name we want?\n          if (cookie.substring(0, name.length + 1) === (name + '=')) {\n              cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n              break;\n          }\n      }\n  }\n  return cookieValue;\n}\n\nexport function backendLookup(method, endpoint, callback, data) {\n  let jsonData;\n  if (data) {\n    jsonData = JSON.stringify(data)\n  }\n  const xhttp = new XMLHttpRequest();\n  const url = `http://localhost:8000/api${endpoint}`;\n  const responseType = 'json';\n  xhttp.open(method, url);\n  xhttp.responseType = responseType;\n  // for csrf token\n  const csrftoken = getCookie('csrftoken')\n  xhttp.setRequestHeader(\"Content-Type\", \"application/json\");\n  if (csrftoken) {\n    //xhttp.setRequestHeader('HTTP_X_REQUESTED_WITH', 'XMLHttpRequest');\n    xhttp.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n    xhttp.setRequestHeader('X-CSRFToken', csrftoken);\n  }\n\n  xhttp.onload = function () {\n    //console.log(xhttp.response, xhttp.status)\n    callback(xhttp.response, xhttp.status)\n  }\n  xhttp.onerror = function (e) {\n    console.log(e)\n    callback({ 'message': \"The request was an error\" }, 400)\n  }\n\n  xhttp.send(jsonData)\n}\n\n","import React from 'react';\nimport { apiTweetAction } from './lookup'\n\nexport function ActionBtn(props) {\n    const { tweet, action, didPerformAction } = props\n    const likes = tweet.likes ? tweet.likes : 0\n    //const [likes, setLikes] = useState(tweet.likes ? tweet.likes : 0)\n    //const [userLike, setUserLike] = useState(tweet.userLike === true ? true : false)\n    const className = props.className ? props.className : 'btn btn-primary btn-sm'\n    const actionDisplay = action.display ? action.display : 'Action'\n\n    const handleBackendActionUpdate = (response, status) => {\n        console.log(response, status)\n        if ((status === 200 || status === 201) && didPerformAction) {\n            //setLikes(response.likes)\n            didPerformAction(response, status)\n            //setUserLike(true)\n        }\n        // if (action.type === 'like') {\n        //     if (userLike === true) {\n        //         //unlike if already liked \n        //         setLikes(likes - 1)\n        //         setUserLike(false)\n        //     }\n        //     else {\n        //         setLikes(likes + 1)\n        //         setUserLike(true)\n        //     }\n        // }\n    }\n\n    //handle like button\n    const handleClick = (event) => {\n        event.preventDefault()\n        apiTweetAction(tweet.id, action.type, handleBackendActionUpdate)\n    }\n\n    const display = action.type === 'like' ? `${likes} ${actionDisplay}` : actionDisplay\n    return <button className={className} onClick={handleClick}>\n        {display}\n    </button>\n}","import {backendLookup} from '../lookup'\n\nexport function apiTweetCreate(newTweet, callback) {\n    backendLookup(\"POST\", \"/tweets/create/\", callback, { content: newTweet })\n}\n\nexport function apiTweetAction(tweetId, action, callback) {\n    const data = {id: tweetId, action: action}\n    backendLookup(\"POST\", \"/tweets/action/\", callback, data)\n}\n\nexport function apiTweetList(username, callback) {\n    let endpoint = \"/tweets/\"\n    if (username) {\n        endpoint = `/tweets/?username=${username}`\n    }\n    backendLookup(\"GET\", endpoint, callback)\n}\n\nexport function apiTweetDetail(tweetId, callback) {\n    let endpoint = `/tweets/${tweetId}/`\n    backendLookup(\"GET\", endpoint, callback)\n}","import React, { useState } from 'react';\nimport { ActionBtn } from './buttons'\n\n\nexport function ParentTweet(props) {\n    const {tweet} = props\n    return tweet.parent ? <div className='row px-0'>\n        <div className='col-11 mx-auto p-3 border rounded'>\n            <p className='text-muted small mb-0'>Retweet</p>\n            <Tweet tweet={tweet.parent} hideActions className={'col-12 px-0'} />\n        </div>\n    </div> : null\n}\n\nexport function Tweet(props) {\n    const { tweet, didRetweet, hideActions } = props\n    const [actionTweet, setActionTweet] = useState(props.tweet ? props.tweet : null)\n    const className = props.className ? props.className : 'col-12 col-md-9 mb-4 py-3 border rounded mx-auto'\n    const path = window.location.pathname\n    var idRegex = /(?<tweetid>\\d+)/\n    var match = path.match(idRegex)\n    const urlTweetId = match ? match.groups.tweetid : -1\n    const isDetail = `${tweet.id}` === `${urlTweetId}`\n    \n    //handle update after action button is used\n    const handlePerformAction = (newActionTweet, status) => {\n        if (status === 200) {\n            setActionTweet(newActionTweet)\n        } else if (status === 201 && didRetweet) {\n            // get new tweet and let tweetList know of change\n            didRetweet(newActionTweet)\n        }\n    }\n\n    const handleLink = (event) => {\n        event.preventDefault()\n        window.location.href = `/${tweet.id}`\n\n    } \n\n    return <div className={className}>\n        <div>\n            <p>{tweet.id} - {tweet.content}</p>\n            <ParentTweet tweet={tweet} />\n        </div>\n        <div className='btn btn-group'>\n            {(actionTweet && hideActions !== true) && <React.Fragment>\n                <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{ type: 'like', display: \"Likes\" }} />\n                <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{ type: 'unlike', display: \"Unlike\" }} />\n                <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{ type: 'retweet', display: \"Retweet\" }} />\n            </React.Fragment>}\n            {isDetail === true ? null : \n                <button onClick={handleLink} className='btn btn-outline-primary btn-sm'>View</button>\n            }\n        </div>\n    </div>\n}","import React, { useEffect, useState } from 'react';\nimport { apiTweetList } from './lookup'\nimport { Tweet } from './detail'\n\n\nexport function TweetsList(props) {\n    const [tweetsInit, setTweetsInit] = useState([])\n    const [tweets, setTweets] = useState([])\n    const [tweetsDidSet, setTweetsDidSet] = useState(false)\n\n    //combine new and inital tweets\n    useEffect(() => {\n        const final = [...props.newTweets].concat(tweetsInit)\n        if (final.length !== tweets.length) {\n            setTweets(final)\n        }\n    }, [props.newTweets, tweetsInit, tweets])\n\n    //call for api tweet list response \n    const handleTweetListLookup = (response, status) => {\n        console.log(response, status)\n        if (status === 200) {\n            setTweetsInit(response)\n            setTweetsDidSet(true)\n        }\n        else {\n            alert(\"There was an error\")\n        }\n    }\n\n    //pull inital tweets\n    useEffect(() => {\n        if (tweetsDidSet === false) {\n            //server side call\n            apiTweetList(props.username, handleTweetListLookup)\n        }\n    }, [setTweetsInit, tweetsDidSet, setTweetsDidSet, props.username])\n\n    //combine new retweets\n    const handleDidRetweet = (newTweet) => {\n        const updateTweetsInit = [...tweetsInit]\n        updateTweetsInit.unshift(newTweet)\n        setTweetsInit(updateTweetsInit)\n        const updateFinalTweets = [...tweets]\n        updateFinalTweets.unshift(tweets)\n        setTweets(updateFinalTweets)\n    }\n\n    return <div className='p-2'>\n        {tweets.map((item, index) => {\n            return <Tweet \n                tweet={item} \n                didRetweet={handleDidRetweet}\n                className='my-5 p-3 border rounded bg-white text-dark' \n                key={`${index}-${item.id}`} />\n        })}\n    </div>\n}","import React from 'react';\nimport { apiTweetCreate } from './lookup'\n\n\nexport function TweetCreate(props) {\n    //set state variables\n    const textAreaRef = React.createRef()\n    const {didTweet} = props\n\n    //callback for api response update\n    const handleBackendCreateUpdate = (response, status) => {\n        if (status === 201) {\n            didTweet(response)\n        }\n        else {\n            console.log(response)\n            alert(\"There was an error that occured\")\n        }\n    }\n\n    //new tweet handler\n    const handleSubmit = (event) => {\n        event.preventDefault()\n        const newT = textAreaRef.current.value\n\n        //server side call\n        apiTweetCreate(newT, handleBackendCreateUpdate)\n        console.log(newT)\n        textAreaRef.current.value = ''\n    }\n\n    return <div className={props.className}>\n        <form onSubmit={handleSubmit}>\n            <textarea ref={textAreaRef} className='form-control' name='tweet' required={true}>\n            </textarea>\n            <button type='submit' className='btn btn-primary my-3'>Tweet</button>\n        </form>\n    </div>\n}","import React, { useEffect, useState } from 'react';\nimport { TweetsList } from './list'\nimport { TweetCreate } from './create'\nimport { Tweet } from './detail'\nimport { apiTweetDetail } from './lookup'\n\n\nexport function TweetsComponent(props) {\n    //set state variables\n    console.log(props)\n    const [newTweets, setNewTweets] = useState([])\n    const canTweet = props.canTweet === \"false\" ? false : true\n\n    //callback for api response update\n    const handleNewTweet = (newTweet) => {\n        let tempNewTweets = [...newTweets]\n        tempNewTweets.unshift(newTweet)\n        setNewTweets(tempNewTweets)\n    }\n\n    return <div className={props.className}>\n        {canTweet === true && <TweetCreate didTweet={handleNewTweet} className='col-12 mb-3'/>}\n        <TweetsList newTweets={newTweets} {...props} />\n    </div>\n\n}\n\nexport function TweetDetailComponent(props) {\n    const {tweetId} = props \n    const [didLookup, setDidLookup] = useState(false)\n    const [tweet, setTweet] = useState(null)\n\n    //callback for tweet detail lookup\n    const handleBackendLookup = (response, status) => {\n        if (status === 200) {\n            setTweet(response)\n        } else {\n            console.log(response)\n            alert(\"There was and error finding that tweet\")\n        }\n    }\n\n    //perform backend lookup on creation\n    useEffect(() => {\n        if(didLookup === false){\n            apiTweetDetail(tweetId, handleBackendLookup)\n            setDidLookup(true)\n        }\n    }, [didLookup, setDidLookup, tweetId])\n\n    return tweet === null ? null :\n        <Tweet\n            tweet={tweet}\n            className={props.className}\n        />\n}\n\n\n\n\n","import logo from './logo.svg';\nimport './App.css';\nimport React from 'react';\nimport {TweetsComponent} from './tweets'\n\n//pulls tweets from backend api endpoint and display on page \n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <TweetsComponent />\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {TweetsComponent, TweetDetailComponent} from './tweets'\nimport reportWebVitals from './reportWebVitals';\n\nconst appEl = document.getElementById('root')\nif(appEl){\n  ReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  appEl\n  );\n}\n\n//insert TweetsComponents into DOM element\nconst e = React.createElement\nconst tweetsEl = document.getElementById('tweetme-2')\nif(tweetsEl){\n  //get data set from django template element\n  const MyComponent = e(TweetsComponent, tweetsEl.dataset)\n  ReactDOM.render(MyComponent, tweetsEl)\n  // ReactDOM.render(\n  // <React.StrictMode>\n  //   <TweetsComponent />\n  // </React.StrictMode>,\n  // tweetsEl\n  // );\n}\n\n//insert TweetDetailComponent into DOM element\nconst tweetDetailElements = document.querySelectorAll(\".tweetme-2-detail\")\n\ntweetDetailElements.forEach(element => {\n  ReactDOM.render(e(TweetDetailComponent, element.dataset), element)\n});\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}